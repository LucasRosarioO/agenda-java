/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package agenda.gui;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author Lucas
 */
public class AgendaFrame extends javax.swing.JFrame {

    private void formatarCampo() {
        try {
            MaskFormatter dia = new MaskFormatter("####-##-##");
            dia.install(txtDia);
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao formatar campo de texto.", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }

    /**
     * Creates new form AgendaFrame
     */
    public AgendaFrame() {
        initComponents();
        formatarCampo();
        RecuperarAgenda();
    }

    public void RecuperarAgenda() {

        try {
            //Registra JDBC driver
            Class.forName("com.mysql.cj.jdbc.Driver");
            //Abrindo a conexão: ATENÇÃO OS DOIS PARÂMETROS VAZIOS(" ") SÃO USUÁRIO E SENHA, RESPECTIVAMENTE.
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/agenda?useTimezone=true&serverTimezone=UTC", "root", "root");
            //Executa a query de seleção
            java.sql.Statement st = conn.createStatement();
            st.executeQuery("select * from eventos");
            ResultSet rs = st.getResultSet();
            //Definir tamanho automático das colunas no modelo
            jTable1.setAutoResizeMode(jTable1.AUTO_RESIZE_ALL_COLUMNS);
            //Criando um modelo de acordo com a definição da "JTable1"
            DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
            //Zerar as linhas existentes do modelo
            modelo.setNumRows(0);
            //Lista os eventos no JTable
            while (rs.next()) {
                modelo.addRow(new Object[]{
                    rs.getString("data"),
                    rs.getString("descricao"),
                    rs.getString("periodicidade"),
                    rs.getString("email"),
                    rs.getString("alarme")
                });
            }
        } catch (SQLException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }//Fim try

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    String alarme;
    String periodicidade;


    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgPeriodicidade = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtDescricao = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtDia = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btUmavez = new javax.swing.JRadioButton();
        btSemanalmente = new javax.swing.JRadioButton();
        btMensalmente = new javax.swing.JRadioButton();
        cbAlarme = new javax.swing.JCheckBox();
        jButtonSalvar = new javax.swing.JButton();
        jButtonLimpar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setMinimumSize(new java.awt.Dimension(400, 300));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(500, 500));

        jLabel1.setText("Descrição de Evento");

        txtDescricao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescricaoActionPerformed(evt);
            }
        });

        jLabel2.setText("Data do Evento");

        txtDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDiaActionPerformed(evt);
            }
        });

        jLabel3.setText("Encaminhar e-mail");

        jLabel4.setText("Periodicidade do Evento");

        bgPeriodicidade.add(btUmavez);
        btUmavez.setText("Uma Vez");
        btUmavez.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUmavezActionPerformed(evt);
            }
        });

        bgPeriodicidade.add(btSemanalmente);
        btSemanalmente.setText("Semanalmente");
        btSemanalmente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSemanalmenteActionPerformed(evt);
            }
        });

        bgPeriodicidade.add(btMensalmente);
        btMensalmente.setText("Mensalmente");
        btMensalmente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btMensalmenteActionPerformed(evt);
            }
        });

        cbAlarme.setText("Alarme");
        cbAlarme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbAlarmeActionPerformed(evt);
            }
        });

        jButtonSalvar.setText("Salvar");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jButtonLimpar.setText("Limpar");
        jButtonLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimparActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 583, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(0, 103, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1)
                        .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(21, 21, 21)
                            .addComponent(txtDia, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addGap(10, 10, 10)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addGap(10, 10, 10)
                            .addComponent(btUmavez)
                            .addGap(0, 0, 0)
                            .addComponent(btSemanalmente)
                            .addGap(0, 0, 0)
                            .addComponent(btMensalmente))
                        .addComponent(cbAlarme)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(125, 125, 125)
                            .addComponent(jButtonSalvar)
                            .addGap(18, 18, 18)
                            .addComponent(jButtonLimpar)))
                    .addGap(0, 104, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(0, 93, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addGap(6, 6, 6)
                    .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(11, 11, 11)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(3, 3, 3)
                            .addComponent(jLabel2))
                        .addComponent(txtDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(11, 11, 11)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(3, 3, 3)
                            .addComponent(jLabel3))
                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(7, 7, 7)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(4, 4, 4)
                            .addComponent(jLabel4))
                        .addComponent(btUmavez)
                        .addComponent(btSemanalmente)
                        .addComponent(btMensalmente))
                    .addGap(18, 18, 18)
                    .addComponent(cbAlarme)
                    .addGap(18, 18, 18)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButtonSalvar)
                        .addComponent(jButtonLimpar))
                    .addGap(0, 93, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Cadastro de Eventos", jPanel1);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Data", "Descrição", "Periodicidade", "E-mail", "Alarme"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 580, 400));

        jTabbedPane1.addTab("Lista de Eventos", jPanel2);

        jScrollPane1.setViewportView(jTabbedPane1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 590, 430));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtDescricaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescricaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescricaoActionPerformed

    private void btUmavezActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUmavezActionPerformed
        if (btUmavez.isSelected()) {
            periodicidade = "Único";
        }
    }//GEN-LAST:event_btUmavezActionPerformed

    private void cbAlarmeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbAlarmeActionPerformed
        if (cbAlarme.isSelected()) {
            alarme = "Ligado";
        } else {
            alarme = "Desligado";
        }
    }//GEN-LAST:event_cbAlarmeActionPerformed

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        try {

            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String dia = txtDia.getText();
            sdf.parse(dia);

            //Registra JDBC driver
            Class.forName("com.mysql.cj.jdbc.Driver");

            //Abrindo a conexão: ATENÇÃO OS DOIS PARÂMETROS VAZIOS(" ") SÃO USUÁRIO E SENHA, RESPECTIVAMENTE.
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/agenda?useTimezone=true&serverTimezone=UTC", "root", "root");

            //Executa a query de inserção
            PreparedStatement stmt = conn.prepareStatement("insert into eventos values(?,?,?,?,?)");
            stmt.setString(1, txtDescricao.getText());//1 specifies the first parameter in the query  
            stmt.setString(2, dia);
            stmt.setString(3, txtEmail.getText());
            stmt.setString(4, periodicidade);
            stmt.setString(5, alarme);

            int i = stmt.executeUpdate();
            RecuperarAgenda();
            JOptionPane.showMessageDialog(rootPane, "Evento Cadastrado");

        } catch (SQLException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(rootPane, e);
        } catch (ParseException ex) {
            Logger.getLogger(AgendaFrame.class.getName()).log(Level.SEVERE, null, ex);
        }//Fim try

    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void btSemanalmenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSemanalmenteActionPerformed
        if (btSemanalmente.isSelected()) {
            periodicidade = "Semanal";
        }
    }//GEN-LAST:event_btSemanalmenteActionPerformed

    private void btMensalmenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btMensalmenteActionPerformed
        if (btMensalmente.isSelected()) {
            periodicidade = "Mensal";
        }
    }//GEN-LAST:event_btMensalmenteActionPerformed

    private void txtDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDiaActionPerformed

    private void jButtonLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimparActionPerformed
        try {
            //Registra JDBC driver
            Class.forName("com.mysql.cj.jdbc.Driver");

            //Abrindo a conexão: ATENÇÃO OS DOIS PARÂMETROS VAZIOS(" ") SÃO USUÁRIO E SENHA, RESPECTIVAMENTE.
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/agenda?useTimezone=true&serverTimezone=UTC", "root", "root");

            //Executa a query de exclusão
            java.sql.Statement st = conn.createStatement();
            st.executeUpdate("TRUNCATE TABLE eventos");

            RecuperarAgenda();
            
            JOptionPane.showMessageDialog(rootPane, "Agenda Limpa");

        } catch (SQLException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }//Fim try

    }//GEN-LAST:event_jButtonLimparActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgendaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgendaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgendaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgendaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AgendaFrame().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgPeriodicidade;
    private javax.swing.JRadioButton btMensalmente;
    private javax.swing.JRadioButton btSemanalmente;
    private javax.swing.JRadioButton btUmavez;
    private javax.swing.JCheckBox cbAlarme;
    private javax.swing.JButton jButtonLimpar;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JFormattedTextField txtDia;
    private javax.swing.JTextField txtEmail;
    // End of variables declaration//GEN-END:variables
}
